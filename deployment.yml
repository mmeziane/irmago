apiVersion: apps/v1
kind: Deployment
metadata:
  name: irma-deployment
  labels:
    app: irma
spec:
  replicas: 3
  selector:
    matchLabels:
      app: irma
  template:
    metadata:
      labels:
        app: irma
    spec:
      containers:
      - name: irma
        image: privacybydesign/irma:edge
        volumeMounts:
        - name: irma-volume
          mountPath: /irmago
        command: ["/bin/irma"]
        args: ["scheme", "download", "--use-schemes-assests-path"]
        ports:
        - containerPort: 8083
      volumes:
      - name: irma-volume
        hostPath:
          path: /mnt/data/irmago/to/irmago

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 3
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15
        env:
        - name: POSTGRES_USER
          value: "testuser"
        - name: POSTGRES_PASSWORD
          value: "testpassword"
        - name: POSTGRES_DB
          value: "test"
        ports:
        - containerPort: 5432

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-init
spec:
  replicas: 3
  selector:
    matchLabels:
      app: postgres-init
  template:
    metadata:
      labels:
        app: postgres-init
    spec:
      containers:
      - name: postgres-init
        image: postgres:15
        env:
        - name: PGHOST
          value: "postgres"
        - name: PGUSER
          value: "testuser"
        - name: PGPASSWORD
          value: "testpassword"
        - name: PGDATABASE
          value: "test"
        volumeMounts:
        - name: init-scripts
          mountPath: /scripts
        command: ["/bin/sh", "-c", "sleep 5 && psql -f /scripts/cleanup.sql && psql -f /scripts/schema.sql"]
      volumes:
      - name: init-scripts
        configMap:
          name: postgres-init-scripts

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mysql
spec:
  replicas: 3
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
      - name: mysql
        image: mysql:8
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: "testpassword"
        - name: MYSQL_DATABASE
          value: "test"
        - name: MYSQL_USER
          value: "testuser"
        - name: MYSQL_PASSWORD
          value: "testpassword"
        ports:
        - containerPort: 3306

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sqlserver
spec:
  replicas: 3
  selector:
    matchLabels:
      app: sqlserver
  template:
    metadata:
      labels:
        app: sqlserver
    spec:
      containers:
      - name: sqlserver
        image: kcollins/mssql:2019-latest
        env:
        - name: ACCEPT_EULA
          value: "Y"
        - name: MSSQL_RANDOM_SA_PASSWORD
          value: "Y"
        - name: MSSQL_DATABASE
          value: "test"
        - name: MSSQL_USER
          value: "testuser"
        - name: MSSQL_PASSWORD
          value: "testpassword"
        - name: MSSQL_PID
          value: "Developer"
        ports:
        - containerPort: 1433

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mailhog
spec:
  replicas: 3
  selector:
    matchLabels:
      app: mailhog
  template:
    metadata:
      labels:
        app: mailhog
    spec:
      containers:
      - name: mailhog
        image: mailhog/mailhog
        ports:
        - containerPort: 1025
        - containerPort: 8025

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webclient
spec:
  replicas: 3
  selector:
    matchLabels:
      app: webclient
  template:
    metadata:
      labels:
        app: webclient
    spec:
      containers:
      - name: webclient
        image: privacybydesign/irma_keyshare_webclient
        ports:
        - containerPort: 3000

---
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  ports:
  - port: 5432
  selector:
    app: postgres

---
apiVersion: v1
kind: Service
metadata:
  name: mysql
spec:
  ports:
  - port: 3306
  selector:
    app: mysql

---
apiVersion: v1
kind: Service
metadata:
  name: sqlserver
spec:
  ports:
  - port: 1433
  selector:
    app: sqlserver

---
apiVersion: v1
kind: Service
metadata:
  name: mailhog
spec:
  ports:
  - port: 1025
  - port: 8025
  selector:
    app: mailhog

---
apiVersion: v1
kind: Service
metadata:
  name: webclient
spec:
  ports:
  - port: 3000
  selector:
    app: webclient

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init-scripts
data:
  schema.sql: |
    - ./server/keyshare/schema.sql:/schema.sql
  cleanup.sql: |
    - ./server/keyshare/cleanup.sql:/cleanup.sql